# 피보나치 0과 1을 입력했을 때 출력되는 0과 1의 횟수를 튜플로 저장해 놓고,
# 위의 초기값을 이용하여 다음 피보나치 수를 호출했을때 출력되는 0과 1의 횟수를 구한다.
# 예를 들어, fibo(3) 호출시에 출력되는 0과 1의 갯수는
# fibo(2)호출시에 출력되는 0의갯수+fibo(1)호출시 출력되는 0의갯수
# fibo(2)호출시에 출력되는 1의갯수+fibo(1)호출시 출력되는 1의갯수

# 시간 제한이 매우 짧으므로 이미 계산한 것은 다시 계산하지 않도록 DP를 이용
'''재귀 함수를 사용하면 컴퓨터 시스템에서 함수를 다시 호출했을 때 메모리 상에 적재되는 일련의 과정 때문에 오버헤드 발생 가능
따라서 재귀 함수 대신에 반복문을 사용하여 오버헤드 줄일 수 있다. 일반적으로 반복문을 사용한 DP가 성능이 더 좋고, 재귀 함수를 이용하여 DP를 하는 방법을 top-down방식, 반복문을 이용하는 방법을 bottom-up방식이라고 한다.'''

import sys
input = sys.stdin.readline

n = int(input())
a = []
for _ in range(n):
    a.append(int(input()))

d = [(0,0)] * 41

d[0] = (1,0)
d[1] = (0,1)

for i in range(2, max(a)+1):
    d[i] = (d[i-1][0]+d[i-2][0],d[i-1][1]+d[i-2][1])
    
for x in a:
    print(d[x][0], d[x][1])


