'''
DP로 해결.
연속합이 음수가 되는 수를 더한 시점에, 연속합을 0으로 다시 초기화한다.
특정 시점에 음수를 더해도 연속합이 음수가 되지 않는다면, 이후 다른 수를 더 더할 수 있으므로 연속합이 음수가 되지 않게 하는
음수를 더하는 것은 상관없다.

위에서 고려한 알고리즘으로 모든 입력이 음수인 경우를 처리한다면, 첫 요소 제외하고 모두 0이 될 것이다.
따라서 모든 입력값이 음수인 경우를 max(nums)<0 으로 체크한 후, 이 경우는 가장 작은 음수 하나만 더하는게 최대값이므로 max(nums)를 출력한다.
'''


n = int(input())
nums = list(map(int, input().split()))

d = [0]*(n+1)

d[0] = -1
d[1] = nums[0]

if max(nums) < 0:
    print(max(nums))

else:
    for i in range(2, n+1):
        d[i] = d[i-1] + nums[i-1]
        if d[i] < 0:
            d[i] = 0
    print(max(d))