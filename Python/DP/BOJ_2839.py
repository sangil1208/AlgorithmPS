# 2839번은 이전에 풀었던 문제지만, DP방식으로 다시 풀어보았다. 이전엔 GREEDY로 해결
# 시간 제한도 1초로 작다.
# 3과 5킬로를 배달하는 숫자를 각각 1로 두고, 이를 이용해 dp수행
# 특정 수에서 5를뺀 요소의 dp테이블에 저장된 횟수+1과 3을뺀 요소의 dp테이블에 저장된 횟수+1의 최소값 구해 저장
# 초기 dp테이블을 매우 큰 수로 초기화해 만들 수 없는 숫자에 해당하는 dp테이블 참조 시 처리 안되도록(min함수 통해)
# dp테이블에 99999가 그대로 있는 경우, -1을 출력(정확하게 만들 수 없는 무게)

'''d를 초기에 99999로 대충 초기화 했더니, 정수 최댓값 보다 작아 예외 발생할 수 있다. 따라서 이렇게 초기화 한 경우에는
min(d[i], d[i-3]+1, d[i-5]+1) 와 같이 자기 자신도 최솟값 비교에 포함시켜야 한다. 혹은 math 라이브러리를 import해서
정수 최대값으로 dp테이블을 초기화 하면 자기 자신을 최솟값 비교 대상에 포함시키지 않을 수 있다.'''

import sys
import math
INF = math.inf
input = sys.stdin.readline
N = int(input())

d = [INF]*5001
d[3] = 1
d[5] = 1

for i in range(6, N+1):
    d[i] = min(d[i-3]+1, d[i-5]+1)
    
if d[N]==INF:
    print(-1)
else:
    print(d[N])